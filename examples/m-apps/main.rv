from rlib.iFace import timer, led, button, clock

import models, iface,  dataviews, cntrl



################################################################################
###########################          Cloud        ##############################
################################################################################


space Cloud:
    platform:
        language = JLang
        system = J2SE.v18

    interfaces:
        clock = Clock()
        timer = Timer()

    models:
        alarm = Alarm(size=100)
        data = DataSample(size=100)
        device_list = Device(size=100)
        deviceS = DeviceS(size=100)
        agent_location = AgentLocation(size=10)
        temp_alarm = TemperatureAlert(size=10)
        agent_response = MobileAgentResponse(size=10)
        auth_reply = AuthRPDevice(size=100)
        auth_rq = AuthRQDevice(size=100)

    controllers:
        data_cntr = DataController(data = models.data, clock = interfaces.clock)
        device_cntr = AssetManager(
                                    device_list = models.device_list,
                                    agent_location = models.agent_location,
                                    clock = interfaces.clock)

        alarm_ctr = AlarmController(alarm = models.alarm,
                                    device_list = models.deviceS,
                                    temp_alarm = models.temp_alarm,
                                    agent_response = models.agent_response,
                                    clock = interfaces.clock)

        auth_server = AuthenticateDevices(auth_rq = models.auth_rq,
                                  auth_reply=models.auth_reply,
                                  device = models.device_list,
                                  clock = interfaces.clock,
                                  timer = interfaces.timer
                                  )

################################################################################
##########################          AgentApp         ############################
################################################################################



space AgentApp:
    platform:
        language = JLang
        system = Android.v19

    interfaces:
        clock = Clock()
        timer = Timer()

    views:
        log_in = LoginView()
        temp_view = TemperatureAlarmView()
        device_view = DeviceView()

    models:
        device_list = DeviceS(size=10)
        agent_location = AgentLocation(size=10)
        agent_response = MobileAgentResponse(size=10)
        temp_alarm = TemperatureAlert(size=10)

    controllers:
        start_ctr = AgentBootController(log_in = views.log_in, clock = interfaces.clock)
        view_ctr = DeviceViewController(
                                         device_list = models.device_list,
                                         agent_location = models.agent_location,
                                         device_view = views.device_view,
                                         clock = interfaces.clock)

        alarm_ctr = AgentAlarm(device_list = models.device_list,
                               agent_location = models.agent_location,
                               temp_view = views.temp_view,
                               agent_response= models.agent_response,
                               temp_alarm = models.temp_alarm,
                               clock = interfaces.clock)





################################################################################
##########################          Gateway         ############################
################################################################################



space Gateway:
    platform:
        #language = CLang
        #system = Posix.v2008
        language = JLang
        system = Android.v19

    interfaces:
        clock = Clock()
    models:
        device = Device(size=100)
        data = DataSample(size=10000)
        alarm = Alarm(size=100)
        auth_reply = AuthRPDevice(size=100)
        auth_rq = AuthRQDevice(size=100)

    controllers:
        btn_ctr = DataController(data = models.data, clock = interfaces.clock)
        alarm_ctr = AlarmCreator(alarm = models.alarm, data = models.data,clock = interfaces.clock)
        data_flow_cntr = DataFlowController(device=models.device, auth_reply = models.auth_reply, auth_rq=models.auth_rq)


################################################################################
#########################          Embedded        #############################
################################################################################

space RPie:
    platform:
        language = CLang
        #system = Posix.v2008
        system = Nrf52.v1

    interfaces:
        btn = Button()
        clock =  Clock()
        led = Led(led_num = 1)
        timer = Timer()
        timer_1 = Timer()
        tmp = TemperatureSource()


    models:
        data = DataSample(size=1000)
        device = Device(size=1)
        auth_reply = AuthRPDevice(size=3)
        auth_rq = AuthRQDevice(size=3)
        #node_config = NodeConfig()

    controllers:
        auth_client = Authentication(
                                   device = models.device,
                                   auth_rq = models.auth_rq,
                                   auth_reply=models.auth_reply,
                                   clock = interfaces.clock,
                                   timer_1 = interfaces.timer_1
                                   )
        btn_ctr = DataGenerator(data = models.data,
                                temperature=interfaces.tmp,
                                auth_reply=models.auth_reply,
                                timer = interfaces.timer,
                                clock = interfaces.clock)
