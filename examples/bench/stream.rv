interface Clock():
    implementation:
        c = "rlib/nrf52/clock.stg"
        #c = "rlib/posix/clock.stg"

    def getNow() : int32


streaming model Random(size : int32):
    properties:
        durable = False
        reliable = False
        records = size
        flow = EmbeddedSpace -> GatewaySpace -> CloudSpace

    schema:
        value : int32



controller EmbeddedController(random: Random, clock : Clock):
    running = False
    frequency = 1000

    event system.started():
        for i=0 to 100:
            rand = random.create()
            rand.value = i
            random.save(rand)

    event random.full():
        system.print("model full")




controller GatewayController(random: Random):

    event random.arrived():
        system.print("random arrived")






space EmbeddedSpace:
    platform:
        language = CLang
        system = Nrf52.v1
        #system = Posix.v2008

    models:
        random = Random(size=100)

    interfaces:
        clock = Clock()

    controllers:
        ectrl = EmbeddedController(random = models.random, clock = interfaces.clock)

space GatewaySpace:
    platform:
        language = JLang
        system = Android.v19
        #system = J2SE.v18
        
    models:
        random = Random(size=50)
        
    controllers:
        gctrl = GatewayController(random = models.random)


