interface Clock():
    implementation:
        c = "rlib/nrf52/clock.stg"
        #c = "rlib/posix/clock.stg"

    def getNow() : int32


streaming model DataMule(size : int32):
    properties:
        durable = False
        reliable = False
        records = size
        flow = EmbeddedSpace -> GatewaySpace

    schema:
        value : int32
        fill : int32[5]



controller EmbeddedController(data: DataMule, clock : Clock):
    running = False
    frequency = 1000

    event system.started():
        for i=0 to 100:
            rec = data.create()
            rec.value = i
            data.save(rec)

    event data.full():
        system.print("model full")




controller GatewayController(data: DataMule):

    event data.arrived():
        system.print("data arrived")






space EmbeddedSpace:
    platform:
        language = CLang
        system = Nrf52.v1
        #system = Posix.v2008

    models:
        data = DataMule(size=100)

    interfaces:
        clock = Clock()

    controllers:
        ectrl = EmbeddedController(data = models.data, clock = interfaces.clock)

space GatewaySpace:
    platform:
        language = JLang
        system = Android.v19
        #system = J2SE.v18
        
    models:
        data = DataMule(size=50)
        
    controllers:
        gctrl = GatewayController(data = models.data)


