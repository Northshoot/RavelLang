streaming model Ping():
    properties:
        records = 5
        flow = EmbeddedSpace -> GatewaySpace -> CloudSpace
    schema:
        value : int32

local model Reference():
    properties:
        records = 1
        durable = True
    schema:
        value : int32

streaming model Pong():
    properties:
        records = 5
        flow = CloudSpace -> GatewaySpace -> EmbeddedSpace
    schema:
        value : int32
        blob : str


controller PingController(ref : Reference, ping : Ping, pong : Pong):
    event system.started():
        system.print("system started")
        refrec : Reference.Record
        if ref.size() == 1:
            refrec = ref.get(0)
        else:
            refrec = ref.create()
            refrec.value = 0
            ref.save(refrec)
        pingrec = ping.create()
        pingrec.value = refrec.value
        ping.save(pingrec)

        for refrec in ref:
            system.print("one record")

    event pong.arrived():
        system.print("pong received")
        pongrec = self.record
        refrec = ref.get(0)
        if pongrec.value != refrec.value:
            system.print("uh oh! the values don't match")
        else:
            system.print("pong ok")
        pong.delete(self.record)

        system.print("sending ping")
        refrec.value += 1
        ref.save(refrec)
        pingrec = ping.create()
        pingrec.value = refrec.value
        ping.save(pingrec)

    event ping.departed():
        system.print("ping departed")

    event ping.save_done():
        system.print("ping save done")
        ping.delete(self.record)


controller PongController(ping : Ping, pong : Pong):
    event ping.arrived():
        system.print("ping received")
        pingrec = self.record
        pongrec = pong.create()
        x = pingrec.value

        pongrec.value = x
        pong.save(pongrec)
        ping.delete(self.record)

    event pong.departed():
        system.print("pong departed")
        pong.delete(self.record)


controller EavesDropController(ping : Ping, pong : Pong):
    event ping.arrived():
        system.print("ping arrived")

    event ping.departed():
        system.print("ping departed")
        ping.delete(self.record)

    event pong.arrived():
        system.print("pong arrived")

    event pong.departed():
        system.print("pong departed")
        pong.delete(self.record)


space GatewaySpace:
    platform:
        language = JLang
        system = Android.v19

    models:
        ping = Ping()
        pong = Pong()

    controllers:
        pong_cnt = EavesDropController(ping = models.ping, pong = models.pong)


space CloudSpace:
    platform:
        language = JLang
        system = J2SE.v18

    models:
        ping = Ping()
        pong = Pong()

    controllers:
        pong_cnt = PongController(ping = models.ping, pong = models.pong)


space EmbeddedSpace:
    platform:
        language = CLang
        system = Nrf52.v1

    models:
        ref = Reference()
        ping = Ping()
        pong = Pong()

    controllers:
        ping_cnt = PingController(ref = models.ref, ping = models.ping, pong = models.pong)
