from ravellib.interfaces.system import clock
from ravellib.interfaces.system import timer

replicated model Ping():
    properties:
        records = 5
    schema:
        counter : int32
        timestamp : int32



controller PingController(time: Clock, timer: Timer, ping2 : Ping):
    counter:int32 = 0
    device_id :int32 = 0

    event system.started():
        system.print("system started")
        device_id = system.deviceID()
        pingrec = ping2.create()
        pingrec.counter = counter
        pingrec.timestamp = time.getNow()
        #system.print("Time :" + (str)pingrec.timestamp)
        ping2.save(pingrec, None)
        counter+=1


    event timer.fired():
        system.print((str)ping2.size(None))
        pingrec = ping2.create()
        pingrec.counter = counter
        pingrec.timestamp = time.getNow()
        system.print("Time :" + (str)pingrec.timestamp)
        ping2.save(pingrec, None)
        counter+=1


    event ping2.arrived():
        pingrec = ping2.create()
        pingrec.counter = counter
        pingrec.timestamp = time.getNow()
        system.print("Time :" + (str)pingrec.timestamp)
        ping2.save(pingrec, None)
        counter+=1

    event ping2.departed():
        system.print("record departed to tier:" + (str)(self.endpoint.getId()))

    event ping2.full():
        system.print("Model is full")
        ping2.clearAll()

    event ping2.save_done():
        system.print("save_done")
        #ping2.delete(self.record, device_id)


controller PongController(ping2 : Ping):

    event ping2.arrived():
        system.print("RX: " + (str)pingrec.timestamp)
        system.print("Got: " + (str)pingrec.counter)
        pingrec = ping2.create()
        pingrec.counter = counter
        pingrec.timestamp = time.getNow()
        system.print("Time :" + (str)pingrec.timestamp)
        ping2.save(pingrec, None)
        counter+=1


    event ping2.full():
        system.print("ping is full")
        ping2.clearAll()

    event ping2.departed():
        system.print("record departed to tier:" + (str)(self.endpoint.getId()))


space Embedded:
    platform:
        language = JLang
        system = J2SE.v18
        #system = Android.v19
        #system = Posix.v2008

    interfaces:
        clock = Clock()
        timer =Timer()

    models:
        ping = Ping()

    controllers:
        ping_cnt = PingController(time = interfaces.clock, timer=interfaces.timer, ping2 = models.ping)

space Gateway:
    platform:
        language = JLang
        system = J2SE.v18
        #system = Android.v19
        #system = J2SE.v18

    models:
        ping = Ping()

    controllers:
        pong_cnt = PongController(ping2 = models.ping)
