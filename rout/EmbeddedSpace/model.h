/**
 * Autogenerated file containing data models
 *  models.h
 *
 *  Created on: 19:36:55 10/08/2016
 *      Author: Ravel
 */
#ifndef MODELS_H_
#define MODELS_H_
//base includes
#include "stdlib.h"
#include "unistd.h"
//default buffers
#include "api/ringbuf.h"

//generating structures for the models
//
typedef struct {
    uint32_t m_time // AUTOGEN-DOCS: Field[name: time, type: TimeStampField, model: Random] ;
    uint32_t m_value // AUTOGEN-DOCS: Field[name: value, type: IntegerField, model: Random] ;
} ;


#define _SIZE sizeof() 

//
typedef struct {
    uint32_t m_frequency // AUTOGEN-DOCS: Field[name: frequency, type: IntegerField, model: UpdateFrequency] ;
} ;


#define _SIZE sizeof() 

//Create internal model packets
typedef struct _metaConfigModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
 model;
}Packet;

#define _PACKET_SIZE sizeof(Packet) 

typedef struct _metaConfigModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
 model;
}Packet;

#define _PACKET_SIZE sizeof(Packet) 

//define model command
void random_model__save( *modelP) ;
int random_model__first( *modelP);
int random_model__get(uint32_t position,  *modelP);

void random_model__queue_innit_sized(int size);
void random_model__queue_innit();
void random_model__destroy_queue(); 

void update_frequency_model__save( *modelP) ;
int update_frequency_model__first( *modelP);
int update_frequency_model__get(uint32_t position,  *modelP);

void update_frequency_model__queue_innit_sized(int size);
void update_frequency_model__queue_innit();
void update_frequency_model__destroy_queue(); 

//end of autogenerated code

#endif /* MODELS_H_ */