/**
 * Autogenerated file containing data models
 *  models.h
 *
 *  Created on: 21:53:05 10/06/2016
 *      Author: Ravel
 */
#ifndef MODELS_H_
#define MODELS_H_
//base includes
#include "stdlib.h"
#include "unistd.h"
//default buffers
#include "api/ringbuf.h"

//generating structures for the models
//Default comments
typedef struct {
    uint32_t m_time // AUTOGEN-DOCS: Field[name: time, type: TimeStampField, model: Random] ;
    uint32_t m_value // AUTOGEN-DOCS: Field[name: value, type: IntegerField, model: Random] ;
} RandomModel;


#define RANDOM_MODEL_SIZE sizeof(RandomModel) 

//Default comments
typedef struct {
    uint32_t m_frequency // AUTOGEN-DOCS: Field[name: frequency, type: IntegerField, model: UpdateFrequency] ;
} UpdateFrequencyModel;


#define UPDATEFREQUENCY_MODEL_SIZE sizeof(UpdateFrequencyModel) 

//Create internal model packets
typedef struct _metaConfigModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	RandomModel model;
}RandomModelPacket;

#define RANDOMMODEL_PACKET_SIZE sizeof(RandomModelPacket) 

typedef struct _metaConfigModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	UpdateFrequencyModel model;
}UpdateFrequencyModelPacket;

#define UPDATEFREQUENCYMODEL_PACKET_SIZE sizeof(UpdateFrequencyModelPacket) 

//define model command
void m_random_model__save(RandomModel *modelP) ;
int m_random_model__first(RandomModel *modelP);
int m_random_model__get(uint32_t position, RandomModel *modelP);

void m_random_model__queue_innit_sized(int size);
void m_random_model__queue_innit();
void m_random_model__destroy_queue(); 

void m_updatefrequency_model__save(UpdateFrequencyModel *modelP) ;
int m_updatefrequency_model__first(UpdateFrequencyModel *modelP);
int m_updatefrequency_model__get(uint32_t position, UpdateFrequencyModel *modelP);

void m_updatefrequency_model__queue_innit_sized(int size);
void m_updatefrequency_model__queue_innit();
void m_updatefrequency_model__destroy_queue(); 

//end of autogenerated code

#endif /* MODELS_H_ */