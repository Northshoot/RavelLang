/**
 * Autogenerated file containing data models
 *  models.h
 *
 *  Created on: 13:07:22 10/12/2016
 *      Author: Ravel
 */
#ifndef MODELS_H_
#define MODELS_H_
//base includes
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
//default buffers
#include "api/ringbuf.h"


typedef struct _rCntx {
	uint32_t error;
	void* model;
} RavelContext;


//generating structures for the models
//
typedef struct {
    uint32_t m_uuid ; // AUTOGEN-DOCS: Field[name: uuid, type: IntegerField, model: AppDevice] 
    char[] m_type ; // AUTOGEN-DOCS: Field[name: type, type: StringField, model: AppDevice] 
    float m_hw_v ; // AUTOGEN-DOCS: Field[name: hw_v, type: NumberField, model: AppDevice] 
    float m_sw_v ; // AUTOGEN-DOCS: Field[name: sw_v, type: NumberField, model: AppDevice] 
    bool m_first_boot ; // AUTOGEN-DOCS: Field[name: first_boot, type: BooleanField, model: AppDevice] 
    uint32_t m_last_reboot ; // AUTOGEN-DOCS: Field[name: last_reboot, type: DateTimeField, model: AppDevice] 
     m_error ; // AUTOGEN-DOCS: Field[name: error, type: ContextField, model: AppDevice] 
} AppDeviceModel;


#define APP_DEVICE_MODEL_SIZE sizeof(AppDeviceModel) 

//
typedef struct {
     m_device ;  
    uint32_t m_frequency ; // AUTOGEN-DOCS: Field[name: frequency, type: IntegerField, model: AppConfig] 
} AppConfigModel;


#define APP_CONFIG_MODEL_SIZE sizeof(AppConfigModel) 

//
typedef struct {
     m_origin ;  
    uint32_t m_time ; // AUTOGEN-DOCS: Field[name: time, type: DateTimeField, model: BootError] 
     m_error ; // AUTOGEN-DOCS: Field[name: error, type: ContextField, model: BootError] 
} BootErrorModel;


#define BOOT_ERROR_MODEL_SIZE sizeof(BootErrorModel) 

//
typedef struct {
    uint32_t m_adc ; // AUTOGEN-DOCS: Field[name: adc, type: IntegerField, model: ADCModel] 
} ADCModelModel;


#define A_D_C_MODEL_MODEL_SIZE sizeof(ADCModelModel) 

//
typedef struct {
     m_device ;  
    uint32_t m_location_lat ; // AUTOGEN-DOCS: Field[name: location_lat, type: IntegerField, model: DeviceLocationModel] 
    uint32_t m_location_long ; // AUTOGEN-DOCS: Field[name: location_long, type: IntegerField, model: DeviceLocationModel] 
    char[] m_street ; // AUTOGEN-DOCS: Field[name: street, type: StringField, model: DeviceLocationModel] 
    char[] m_house ; // AUTOGEN-DOCS: Field[name: house, type: StringField, model: DeviceLocationModel] 
    char[] m_zip ; // AUTOGEN-DOCS: Field[name: zip, type: StringField, model: DeviceLocationModel] 
    char[] m_location ; // AUTOGEN-DOCS: Field[name: location, type: StringField, model: DeviceLocationModel] 
    char[] m_notes ; // AUTOGEN-DOCS: Field[name: notes, type: StringField, model: DeviceLocationModel] 
} DeviceLocationModelModel;


#define DEVICE_LOCATION_MODEL_MODEL_SIZE sizeof(DeviceLocationModelModel) 

//
typedef struct {
    uint32_t m_time ; // AUTOGEN-DOCS: Field[name: time, type: TimeStampField, model: Measurement] 
    uint32_t m_temperature ; // AUTOGEN-DOCS: Field[name: temperature, type: IntegerField, model: Measurement] 
    uint32_t m_voltage ; // AUTOGEN-DOCS: Field[name: voltage, type: IntegerField, model: Measurement] 
} MeasurementModel;


#define MEASUREMENT_MODEL_SIZE sizeof(MeasurementModel) 

//
typedef struct {
    uint32_t m_blob ; // AUTOGEN-DOCS: Field[name: blob, type: IntegerField, model: MeasurementPacket] 
    uint32_t m_sequence ; // AUTOGEN-DOCS: Field[name: sequence, type: IntegerField, model: MeasurementPacket] 
    bool m_acked ; // AUTOGEN-DOCS: Field[name: acked, type: BooleanField, model: MeasurementPacket] 
    char[] m_measurement ; // AUTOGEN-DOCS: Field[name: measurement, type: ByteField, model: MeasurementPacket] 
} MeasurementPacketModel;


#define MEASUREMENT_PACKET_MODEL_SIZE sizeof(MeasurementPacketModel) 

//
typedef struct {
    char[] m_measurement ; // AUTOGEN-DOCS: Field[name: measurement, type: ByteField, model: EncryptedBlob] 
} EncryptedBlobModel;


#define ENCRYPTED_BLOB_MODEL_SIZE sizeof(EncryptedBlobModel) 

//Create internal model packets
typedef struct _metaAppDeviceModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	AppDeviceModel model;
}AppDeviceModelPacket;

#define APP_DEVICE_MODEL_PACKET_SIZE sizeof(AppDeviceModelPacket) 

typedef struct _metaAppConfigModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	AppConfigModel model;
}AppConfigModelPacket;

#define APP_CONFIG_MODEL_PACKET_SIZE sizeof(AppConfigModelPacket) 

typedef struct _metaBootErrorModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	BootErrorModel model;
}BootErrorModelPacket;

#define BOOT_ERROR_MODEL_PACKET_SIZE sizeof(BootErrorModelPacket) 

typedef struct _metaADCModelModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	ADCModelModel model;
}ADCModelModelPacket;

#define A_D_C_MODEL_MODEL_PACKET_SIZE sizeof(ADCModelModelPacket) 

typedef struct _metaDeviceLocationModelModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	DeviceLocationModelModel model;
}DeviceLocationModelModelPacket;

#define DEVICE_LOCATION_MODEL_MODEL_PACKET_SIZE sizeof(DeviceLocationModelModelPacket) 

typedef struct _metaMeasurementModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	MeasurementModel model;
}MeasurementModelPacket;

#define MEASUREMENT_MODEL_PACKET_SIZE sizeof(MeasurementModelPacket) 

typedef struct _metaMeasurementPacketModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	MeasurementPacketModel model;
}MeasurementPacketModelPacket;

#define MEASUREMENT_PACKET_MODEL_PACKET_SIZE sizeof(MeasurementPacketModelPacket) 

typedef struct _metaEncryptedBlobModel {
	uint32_t node_UUID;
	uint8_t origin;
	uint8_t rqACK;
	uint8_t size;
	EncryptedBlobModel model;
}EncryptedBlobModelPacket;

#define ENCRYPTED_BLOB_MODEL_PACKET_SIZE sizeof(EncryptedBlobModelPacket) 

//define model command
//init model
void app_device_model__innit();
//destroy buffer
void app_device_model__destroy();

//*record functions:*/
//create record
AppDeviceModel app_device_model__create() ;
//save record
void app_device_model__save(AppDeviceModel *modelP) ;
//delete
void app_device_model__delete(int position) ;

//* record local queries */
//get record with position position
void app_device_model__get(uint32_t position, AppDeviceModel *rm);
//get first record
void app_device_model__get_first(AppDeviceModel *rm);
//get last record
void app_device_model__get_last(AppDeviceModel *rm);

 

//init model
void app_config_model__innit();
//destroy buffer
void app_config_model__destroy();

//*record functions:*/
//create record
AppConfigModel app_config_model__create() ;
//save record
void app_config_model__save(AppConfigModel *modelP) ;
//delete
void app_config_model__delete(int position) ;

//* record local queries */
//get record with position position
void app_config_model__get(uint32_t position, AppConfigModel *rm);
//get first record
void app_config_model__get_first(AppConfigModel *rm);
//get last record
void app_config_model__get_last(AppConfigModel *rm);

 

//init model
void boot_error_model__innit();
//destroy buffer
void boot_error_model__destroy();

//*record functions:*/
//create record
BootErrorModel boot_error_model__create() ;
//save record
void boot_error_model__save(BootErrorModel *modelP) ;
//delete
void boot_error_model__delete(int position) ;

//* record local queries */
//get record with position position
void boot_error_model__get(uint32_t position, BootErrorModel *rm);
//get first record
void boot_error_model__get_first(BootErrorModel *rm);
//get last record
void boot_error_model__get_last(BootErrorModel *rm);

 

//init model
void a_d_c_model_model__innit();
//destroy buffer
void a_d_c_model_model__destroy();

//*record functions:*/
//create record
ADCModelModel a_d_c_model_model__create() ;
//save record
void a_d_c_model_model__save(ADCModelModel *modelP) ;
//delete
void a_d_c_model_model__delete(int position) ;

//* record local queries */
//get record with position position
void a_d_c_model_model__get(uint32_t position, ADCModelModel *rm);
//get first record
void a_d_c_model_model__get_first(ADCModelModel *rm);
//get last record
void a_d_c_model_model__get_last(ADCModelModel *rm);

 

//init model
void device_location_model_model__innit();
//destroy buffer
void device_location_model_model__destroy();

//*record functions:*/
//create record
DeviceLocationModelModel device_location_model_model__create() ;
//save record
void device_location_model_model__save(DeviceLocationModelModel *modelP) ;
//delete
void device_location_model_model__delete(int position) ;

//* record local queries */
//get record with position position
void device_location_model_model__get(uint32_t position, DeviceLocationModelModel *rm);
//get first record
void device_location_model_model__get_first(DeviceLocationModelModel *rm);
//get last record
void device_location_model_model__get_last(DeviceLocationModelModel *rm);

 

//init model
void measurement_model__innit();
//destroy buffer
void measurement_model__destroy();

//*record functions:*/
//create record
MeasurementModel measurement_model__create() ;
//save record
void measurement_model__save(MeasurementModel *modelP) ;
//delete
void measurement_model__delete(int position) ;

//* record local queries */
//get record with position position
void measurement_model__get(uint32_t position, MeasurementModel *rm);
//get first record
void measurement_model__get_first(MeasurementModel *rm);
//get last record
void measurement_model__get_last(MeasurementModel *rm);

 

//init model
void measurement_packet_model__innit();
//destroy buffer
void measurement_packet_model__destroy();

//*record functions:*/
//create record
MeasurementPacketModel measurement_packet_model__create() ;
//save record
void measurement_packet_model__save(MeasurementPacketModel *modelP) ;
//delete
void measurement_packet_model__delete(int position) ;

//* record local queries */
//get record with position position
void measurement_packet_model__get(uint32_t position, MeasurementPacketModel *rm);
//get first record
void measurement_packet_model__get_first(MeasurementPacketModel *rm);
//get last record
void measurement_packet_model__get_last(MeasurementPacketModel *rm);

 

//init model
void encrypted_blob_model__innit();
//destroy buffer
void encrypted_blob_model__destroy();

//*record functions:*/
//create record
EncryptedBlobModel encrypted_blob_model__create() ;
//save record
void encrypted_blob_model__save(EncryptedBlobModel *modelP) ;
//delete
void encrypted_blob_model__delete(int position) ;

//* record local queries */
//get record with position position
void encrypted_blob_model__get(uint32_t position, EncryptedBlobModel *rm);
//get first record
void encrypted_blob_model__get_first(EncryptedBlobModel *rm);
//get last record
void encrypted_blob_model__get_last(EncryptedBlobModel *rm);

 

//end of autogenerated code

#endif /* MODELS_H_ */