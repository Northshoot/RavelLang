/**
 * Autogenerated main file
 *
 *
 *  Created on: 
 *      Author: Ravel
 */

#include "models.h" //since we have same naming
#include "api/api_timer.h"
//here we only declare system subscribed event callbacks

//start with models
//* record events defined for each controller */
//TODO: add many to many relation support
//arrived event
void vibration_model__node_ctr__arrived(void *rctx);
//departed event
void vibration_model__node_ctr__departed(void *rctx);
//buffer is full event
void vibration_model__node_ctr__full(void *rctx);
//save done event
void vibration_model__node_ctr__saveDone(void *rctx);
//data saved to the buffer event
void vibration_model__node_ctr__bufferSaveDone(void *rctx);
//* record events defined for each controller */
//TODO: add many to many relation support
//arrived event
void p_phase_model__coordinator_ctr__arrived(void *rctx);
//departed event
void p_phase_model__coordinator_ctr__departed(void *rctx);
//buffer is full event
void p_phase_model__coordinator_ctr__full(void *rctx);
//save done event
void p_phase_model__coordinator_ctr__saveDone(void *rctx);
//data saved to the buffer event
void p_phase_model__coordinator_ctr__bufferSaveDone(void *rctx);
//* record events defined for each controller */
//TODO: add many to many relation support
//arrived event
void compressed_sample_model__coordinator_ctr__arrived(void *rctx);
//departed event
void compressed_sample_model__coordinator_ctr__departed(void *rctx);
//buffer is full event
void compressed_sample_model__coordinator_ctr__full(void *rctx);
//save done event
void compressed_sample_model__coordinator_ctr__saveDone(void *rctx);
//data saved to the buffer event
void compressed_sample_model__coordinator_ctr__bufferSaveDone(void *rctx);
//* record events defined for each controller */
//TODO: add many to many relation support
//arrived event
void transmit_c_s_model__coordinator_ctr__arrived(void *rctx);
//departed event
void transmit_c_s_model__coordinator_ctr__departed(void *rctx);
//buffer is full event
void transmit_c_s_model__coordinator_ctr__full(void *rctx);
//save done event
void transmit_c_s_model__coordinator_ctr__saveDone(void *rctx);
//data saved to the buffer event
void transmit_c_s_model__coordinator_ctr__bufferSaveDone(void *rctx);

//generating source callbacks declarions
void node_ctr__timer__timer_periodic__expired(void * p_context);
 

 

void node_ctr__system_booted(void *rctx);

//**** end autogenerated file **//
 