controller RandomControllerEmbedded(tier):
    mFreq = tier.models.frequency
    mRandom = tier.models.random
    mError = tier.models.error
    random_source = tier.sources.random
    random_timer = tier.platform.timer
    boot_event = tier.platform.boot
    running = false
    int_test = 20
    numb_test = 34.
    string_test = stringy_string

    event boot_event.booted(context ctx):
        if ctx.error is SUCCESS:
            random_timer.start_periodic(mFreq.frequency)
            running = true
        else:
            error = mError.create()
            error.occurred=self
            error.context=ctx
            error.save()

    event mFreq.arrived(context ctx):
        random_timer.stop()
        random_timer.start_periodic(mFreq.frequency)

    event random_timer.fired(context ctx):
        rand = mRandom.create()
        rand.value = random_source.read()
        rand.save()

    event mRandom.full(context ctx):
        random_timer.stop()
        running = false

    event mRandom.departed(context ctx):
        if not running:
            random_timer.start_periodic(mFreq.frequency)
            running = true