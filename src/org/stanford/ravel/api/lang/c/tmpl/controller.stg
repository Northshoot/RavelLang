import "common.stg"

define_event_handler(handler, controller_name) ::=<<
void
ravel_generated_<controller_name; format="function">_<handler.modelVar.name>_<handler.eventType.eventName>(<controller_name>* this<! this is not a keyword in C, so we can use it !><append_parameter_list(handler.arguments)>)
{
    <handler.body>}
>>

define_array_constant(c) ::=<<
static <c.type.elementType> static_<c.name>[] = { <c.values:{v|<v; format="literal">}; separator=", "> };
>>

c_file(includes,name,controller,eventHandlers) ::=<<
<begin_source(name)>

#include "api/context.h"
#include "api/system.h"
#include "api/intrinsics.h"

<includes:do_include(); separator="\n">

<controller.arrayConstantSymbols:define_array_constant(); separator="\n">

void
ravel_generated_<name; format="function">_init(<name>* self<append_parameter_list(controller.parameterSymbols)>)
{
    <controller.parameterSymbols:{p|self-><p.name> = <p.name>;}; separator="\n">
    <controller.classScopeVariableSymbols:{p|self-><p.name> = <p.value; format="literal">;}; separator="\n">
    <controller.arrayConstantSymbols:{p|self-><p.name> = static_<p.name>;}; separator="\n">
}

void
ravel_generated_<name; format="function">_finalize(<name>* self)
{
    /* Free any allocated resources here */
}

<eventHandlers:define_event_handler(name); separator="\n\n">
>>

declare_event_handler(handler, controller_name) ::=<<
void ravel_generated_<controller_name; format="function">_<handler.modelVar.name>_<handler.eventType.eventName>(<controller_name>* __this<append_parameter_list(handler.arguments)>);
>>

h_file(includes,name,controller,eventHandlers) ::=<<
<begin_header("CONTROLLER", name)>

#include \<api/context.h>
#include \<api/system.h>

/* Forward declare our controller class before we include the model headers */
typedef struct s_<name> <name>;

<includes:do_include(); separator="\n">

<begin_extern_c()>

struct s_<name> {
    <controller.parameterSymbols:{p|<p.type> <p.name>;}; separator="\n">
    <controller.classScopeVariableSymbols:{p|<p.type> <p.name>;}; separator="\n">
    <controller.arrayConstantSymbols:{p|<p.type> <p.name>;}; separator="\n">
};

void ravel_generated_<name; format="function">_init(<name>* self<append_parameter_list(controller.parameterSymbols)>);
void ravel_generated_<name; format="function">_finalize(<name>* self);

<eventHandlers:declare_event_handler(name); separator="\n">

<end_extern_c()>
<end_header("CONTROLLER", name)>
>>