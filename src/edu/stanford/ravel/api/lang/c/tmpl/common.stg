do_include(incl) ::=<<
#include "<incl>"
>>

begin_header(prefix, name) ::=<<
/*
 * You, just keep on being awesome!
 * <name; format="file">.h
 *
 *  Autogenerated by Ravel system
 */

#ifndef <prefix>_<name; format="macro_def">
#define <prefix>_<name; format="macro_def">

<! include files that should always be present !>
#include \<stdlib.h>
#include \<stddef.h>
#include \<string.h>
#include \<stdint.h>
#include \<stdbool.h>
#include \<stdio.h>
>>
end_header(prefix, name) ::=<<
#endif /* <prefix>_<name; format="macro_def"> */
>>

begin_extern_c() ::=<<
#ifdef __cplusplus
extern "C" {
#endif
>>

end_extern_c() ::=<<
#ifdef __cplusplus
}
#endif
>>

begin_source(name) ::= <<
/*
 * You, just keep on being awesome!
 * <name; format="file">.c
 *
 *  Autogenerated by Ravel system
 */
 >>

parameter_list(params) ::=<<<if(params)><params:{p|<p.type> <p.name>}; separator=", "><else>void<endif>
>>

append_parameter_list(params)::=<<<if(params)>, <params:{p|<p.type> <p.name>}; separator=", "><endif>
>>

declare_set_controller_method(c, component_name) ::=<<
void ravel_generated_<component_name; format="function">_set_controller_<c.varName>(<component_name> *self, <c.component.name> *ctr);
>>

define_set_controller_method(c, component_name) ::=<<
void
ravel_generated_<component_name; format="function">_set_controller_<c.varName>(<component_name> *self, <c.component.name> *ctr)
{
    self->ctr_<c.varName> = ctr;
}
>>

call_event(handler, event, params) ::=<<
ravel_generated_<handler.controller.name; format="function">_<handler.varName>_<event>(self->ctr_<handler.controllerInstance.varName><if(params)>, <params; separator=", "><endif>);
>>

dispatch_event_case(instance_id, event, component, params) ::=<<
case <instance_id>:
    <component.controllerMap.(event).(instance_id):call_event(event, params); separator="\n">
    break;
>>

dispatch_event(component, event, params) ::=<<
switch (self->__id) {
<component.controllerMap.(event):dispatch_event_case(event, component, params); separator="\n">
}
>>

dispatch_event_single_instance(component, event, params) ::=<<
<component.controllerMap.(event):{instance_id|<component.controllerMap.(event).(instance_id):call_event(event, params); separator="\n">}; separator="\n">
>>

call_event_ptr(handler, event, params) ::=<<
ravel_generated_<handler.controller.name; format="function">_<handler.varName>_<event>(&self->ctr_<handler.controllerInstance.varName><if(params)>, <params; separator=", "><endif>);
>>

dispatch_event_single_instance_ptr(component, event, params) ::=<<
<component.controllerMap.(event):{instance_id|<component.controllerMap.(event).(instance_id):call_event_ptr(event, params); separator="\n">}; separator="\n">
>>