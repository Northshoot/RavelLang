package ai.harmony.ravel;

import org.apache.log4j.PropertyConfigurator;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.ResourceBundle;

/**
 * Created by larry on 4/19/17.
 */
public class RavelProperties {
    private static final String BUNDLE_NAME =  "./default.properties";

    private static ResourceBundle RESOURCE_BUNDLE ;//= ResourceBundle.getBundle(BUNDLE_NAME);
    private final static String FILE_OUT_DIR="fileOutDir";
    private final static String BASE_TMPL_DIR="baseTmplDir";
    private final static String API_C_TMPL_DIR="apiCTmplDir";
    private final static String API_JAVA_TMPL_DIR="apiJavaDir";
    private final static String API_PYTHON_TMPL_DIR="apiPythonDir";
    private final static String API_NRF52_TMPL_DIR="apiNRF52Dir";
    private final static String API_CONTIKI_TMPL_DIR="apiContikiDir";
    private final static String API_ANDROID_TMPL_DIR="apiAndroidDir";
    private final static String API_POSIX_TMPL_DIR="apiPosixDir";
    private final static String API_J2SE_TMPL_DIR="apiJ2SEDir";

    private final static String API_LANG = "apiLangPackage";
    private final static String API_PLATFORM = "apiPlatformPackage";
    private final static String RUNTIME = "apiRuntimePackage";
    private static final String API_RIE_J2SE_TMPL_DIR = "apiRPIEDir";
    private static final String JAVA_JARLIB_PATH = "javaJarLibDir";


    public  String get_fileOutDir(){
        return properties.getProperty(FILE_OUT_DIR)+"/";
    }

    public  String get_c_tmpl_dir(){
        return get_base_tmpl_dir()+"/" +properties.getProperty(API_C_TMPL_DIR)+"/";
    }

    public  String get_java_tmpl_dir(){
        return get_base_tmpl_dir()+"/" +properties.getProperty(API_JAVA_TMPL_DIR)+"/";
    }
    public  String get_python_tmpl_dir(){
        return get_base_tmpl_dir()+"/" +properties.getProperty(API_PYTHON_TMPL_DIR)+"/";
    }
    public  String get_j2se_tmpl_dir(){
        return get_base_tmpl_dir()+"/" +properties.getProperty(API_J2SE_TMPL_DIR)+"/";
    }
    public  String get_android_tmpl_dir(){
        return get_base_tmpl_dir()+"/" +properties.getProperty(API_ANDROID_TMPL_DIR)+"/";
    }
    public  String get_posix_tmpl_dir(){
        return get_base_tmpl_dir()+"/" +properties.getProperty(API_POSIX_TMPL_DIR)+"/";
    }
    public  String get_contiki_tmpl_dir(){
        return get_base_tmpl_dir()+"/" +properties.getProperty(API_CONTIKI_TMPL_DIR)+"/";
    }

    public  String get_nrf52_tmpl_dir(){
        return get_base_tmpl_dir()+"/" + properties.getProperty(API_NRF52_TMPL_DIR)+"/";
    }

    public  String get_base_tmpl_dir(){
        return properties.getProperty(BASE_TMPL_DIR);
    }
    public  String get_language_package(){
        return properties.getProperty(API_LANG);
    }
    public  String get_platform_package(){
        return properties.getProperty(API_PLATFORM);
    }
    public  String get_runtime_package(){
        return properties.getProperty(RUNTIME);
    }

    //TODO: clean out the config file:
    //separate autogenerated from user editable data

    public String getVersion(){
        return properties.getProperty("app.version");
    }

    public String getUserName(){
        return properties.getProperty("app.user");
    }

    public String getPassword(){
        return properties.getProperty("app.password");
    }

    public String getToken(){
        return properties.getProperty("app.token");
    }

    public String getOrg(){
        return properties.getProperty("app.org");
    }

    public String getID(){
        return properties.getProperty("app.id");
    }

    public String getCompilerVersion(){
        return properties.getProperty("compiler.version");
    }

    public String getLibJarPath(){return properties.getProperty(JAVA_JARLIB_PATH);}
    public  String get_rpiej2se_tmpl_dir() {
        return get_base_tmpl_dir() +properties.getProperty(API_RIE_J2SE_TMPL_DIR);
    }

    public void setProperty(String val, String key){
        System.out.println("Setting properties");
        properties.setProperty(val, key);
        try {
            FileOutputStream f = new FileOutputStream(BUNDLE_NAME);
            properties.store(f, "Auto saved");
            f.close();
        } catch (IOException e) {
            System.err.println("Could not write to property file");
            e.printStackTrace();

        }

    }


    private static RavelProperties mRavelProperties = new RavelProperties( );
    private final Properties properties = new Properties();
    private FileInputStream file;


    private RavelProperties(){
        propInit();
    }

    public static RavelProperties getInstance() {
        return mRavelProperties;
    }

    private void propInit()  {

        try {
            file = new FileInputStream(BUNDLE_NAME);
            properties.load(file);
            //RESOURCE_BUNDLE = ResourceBundle.getBundle(properties.)
            PropertyConfigurator.configure(properties);
            file.close();
//            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
//            Date date = new Date();
//            setProperty("time.lastCompiled", date.toString());
        } catch (Exception e) {
            System.out.println("Exception opening: " + e);
        }

    }
    public Object clone() throws CloneNotSupportedException{
        throw new CloneNotSupportedException("Cannot clone instance of this class");
    }
}
